// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  version   Int      @default(autoincrement())

  @@map("user")
}

model Track {
  id           String            @id @default(uuid())
  name         String
  artistId     String?
  albumId      String?
  duration     Int
  track_artist Artist?           @relation(fields: [artistId], references: [id])
  album        Album?            @relation(fields: [albumId], references: [id])
  tracks       FavoritesTracks[]

  @@map("tracks")
}

model Album {
  id           String            @id @default(uuid())
  name         String
  year         Int
  artistId     String?           @unique
  album_artist Artist?           @relation(fields: [artistId], references: [id])
  tracks       Track[]
  albums       FavoritesAlbums[]

  @@map("albums")
}

model Artist {
  id      String             @id @default(uuid())
  name    String
  grammy  Boolean            @default(false)
  albums  Album[]
  tracks  Track[]
  artists FavoritesArtists[]

  @@map("artists")
}

model FavoritesAlbums {
  albums  Album  @relation(fields: [albumId], references: [id])
  albumId String

  @@id([albumId])
}

model FavoritesArtists {
  artists  Artist @relation(fields: [artistId], references: [id])
  artistId String

  @@id([artistId])
}

model FavoritesTracks {
  tracks  Track  @relation(fields: [trackId], references: [id])
  trackId String

  @@id([trackId])
}
